name: Main
on:
  - pull_request
  - push
jobs:
  common:
    name: Dependencies, Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '14', '16' ]
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node: ${{ matrix.node }}

      - name: Run unit tests
        run: npm test

  libs:
    name: Build libraries
    needs:
      - common
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '14' ]
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node: ${{ matrix.node }}

      - name: Build libraries
        run: npm run libs:build

  chromatic:
    name: Chromatic
    needs:
      - libs
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        node: [ '14' ]
    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node: ${{ matrix.node }}

      - name: Push Storybook to Chromatic
        env:
          NODE_OPTIONS: --max_old_space_size=6144
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: 'build:storybook'
          autoAcceptChanges: master
          exitZeroOnChanges: true
          exitOnceUploaded: true

  build-app:
    name: Build application
    needs:
      - common
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ 'docs' ]
        node: [ '14' ]
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node: ${{ matrix.node }}

      - name: Build
        uses: ./.github/actions/build-app
        with:
          app: ${{ matrix.app }}

      - name: Save build directory
        uses: actions/upload-artifact@v3
        with:
          name: 'build-${{ matrix.app }}'
          path: "${{ matrix.app && format('apps/{0}/', matrix.app) }}dist"
          if-no-files-found: error
          retention-days: 2

  test-app:
    name: Test application
    needs:
      - build-app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ 'docs' ]
        browser: [ 'chromium', 'firefox', 'electron' ]
        node: [ '14' ]
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node: ${{ matrix.node }}

      - name: Download build directory
        uses: actions/download-artifact@v3
        with:
          name: 'build-${{ matrix.app }}'
          path: "${{ matrix.app && format('apps/{0}/', matrix.app) }}dist"

      - name: Run functional tests
        uses: './.github/actions/test-app'
        with:
          app: ${{ matrix.app }}
          browser: ${{ matrix.browser }}
          cypress-project-id: ${{ secrets.CYPRESS_PROJECT_ID }}
          cypress-record-key: ${{ secrets.CYPRESS_RECORD_KEY }}
          node: ${{ matrix.node }}

  deploy-docs-to-netlify:
    name: Deploy to Netlify and test
    if: github.event_name != 'pull_request'
    needs:
      - build-app
    uses: './.github/workflows/deploy-to-netlify.yml'
    with:
      app: docs
      node: 14
      production-branch: master
    secrets:
      CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
